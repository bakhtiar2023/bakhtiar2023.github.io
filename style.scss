@mixin sp-layout {
  @media screen and (max-width: 750px) {
    @content;
  }
}
:root{
  --primary-color: #c3dbf79c;
}

body {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background: radial-gradient(ellipse at bottom, #3973b9 0%, #616a9a 100%);
  overflow: hidden;
}

.content{
  position: absolute;
}

.button{
  background-color: #ffffff;
  border: 1px solid #c3dbf79c;
  padding: 0.2rem 0.3rem;
  width: 130%;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  border-radius: 1em;
}
#ligth-icon{
  transform: translateZ(10px)!important;
}

button{
  all:unset;
  cursor: pointer;
}
.dark-mode{
  background-color: #00000000;
  color: #ffffffff;
}

@function random_range($min, $max) {
  @return $min + random($max - $min + 1);
}

.stars {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 120%;
  transform: rotate(-45deg);
}

.star {
  $star-count: 50;
  --star-color: var(--primary-color);
  --star-tail-length: 6em;
  --star-tail-height: 2px;
  --star-width: calc(var(--star-tail-length) / 6);
  --fall-duration: 9s;
  --tail-fade-duration: var(--fall-duration);

  position: absolute;
  top: var(--top-offset);
  left: 0;
  width: var(--star-tail-length);
  height: var(--star-tail-height);
  color: var(--star-color);
  background: linear-gradient(45deg, currentColor, transparent);
  border-radius: 50%;
  filter: drop-shadow(0 0 6px currentColor);
  transform: translate3d(104em, 0, 0);
  animation: fall var(--fall-duration) var(--fall-delay) linear infinite, tail-fade var(--tail-fade-duration) var(--fall-delay) ease-out infinite;

  @include sp-layout {
    animation: fall var(--fall-duration) var(--fall-delay) linear infinite;
  }

  // Loop for dynamic star styles
  @for $i from 1 through $star-count {
    &:nth-child(#{$i}) {
      --star-tail-length: #{random(25) / 10 + 5}em; // Simulates random_range(5, 7.5)
      --top-offset: #{random(100)}vh; // Simulates random_range(0, 100)
      --fall-duration: #{random(6000) / 1000 + 6}s; // Simulates random_range(6, 12)
      --fall-delay: #{random(10000) / 1000}s; // Simulates random_range(0, 10)
    }
  }

  &::before,
  &::after {
    position: absolute;
    content: '';
    top: 0;
    left: calc(var(--star-width) / -2);
    width: var(--star-width);
    height: 100%;
    background: linear-gradient(45deg, transparent, currentColor, transparent);
    border-radius: inherit;
    animation: blink 2s linear infinite;
  }

  &::before {
    transform: rotate(45deg);
  }

  &::after {
    transform: rotate(-45deg);
  }
}


@keyframes fall {
  to {
    transform: translate3d(-30em, 0, 0);
  }
}

@keyframes tail-fade {
  0%,
  50% {
    width: var(--star-tail-length);
    opacity: 1;
  }
  70%,
  80% {
    width: 0;
    opacity: 0.4;
  }
  100% {
    width: 0;
    opacity: 0;
  }
}

@keyframes blink {
  50% {
    opacity: 0.6;
  }
}